<?xml version="1.0"?>
<!-- FOR FUTURE USE. NOT SUPPORTED NOW. DO NOT USE IT. -->
<launch>
    <arg name="hostname" default="192.168.0.1"/>
    <node name="sick_lms_1xx" pkg="sick_scan" type="sick_generic_caller" respawn="false" output="screen">
        <param name="intensity" type="bool" value="False"/>
        <param name="intensity_resolution_16bit" type="bool" value="false"/>
        <param name="min_ang" type="double" value="-1.658"/>
        <param name="max_ang" type="double" value="1.658"/>
        <param name="frame_id" type="str" value="laser"/>
        <!-- param name="use_binary_protocol" type="bool" value="false"/ -->
        <param name="use_binary_protocol" type="bool" value="true"/>
        <param name="scanner_type" type="string" value="sick_lms_1xx"/>
        <param name="range_max" type="double" value="10.0"/>
        <param name="hostname" type="string" value="$(arg hostname)"/>
        <param name="port" type="string" value="2112"/>
        <param name="timelimit" type="int" value="5"/>
        <param name="start_services" type="bool" value="True"/> <!-- start ros service for cola commands -->
        <param name="activate_lferec" type="bool" value="True"/> <!-- activate field monitoring by lferec messages -->
        <param name="activate_lidoutputstate" type="bool" value="True"/> <!-- activate field monitoring by lidoutputstate messages -->
        <param name="activate_lidinputstate" type="bool" value="True"/> <!-- activate field monitoring by lidinputstate messages -->
        <param name="min_intensity" type="double" value="0.0"/> <!-- Set range of LaserScan messages to infinity, if intensity < min_intensity (default: 0) -->
    </node>
<node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
      <rosparam command="load" file="$(find laser_filters)/examples/box_filter.yaml" />
</node>

 <node name="obstacle_extractor" pkg="obstacle_detector" type="obstacle_extractor_node" output="screen">
    <remap from="scan" to="scan_filtered"/> 
    <param name="active"               value="true"/>
    <param name="use_scan"             value="true"/>
    <param name="use_pcl"              value="true"/>
    <!-- use_pcl, default value:false -->
    <param name="use_split_and_merge"    value="true"/>
    <param name="circles_from_visibles"  value="false"/>
    <param name="discard_converted_segments" value="false"/>
    <param name="transform_coordinates"  value="true"/>

    <param name="min_group_points"     value="2"/>  

    <param name="max_group_distance"   value="0.1"/>
    <param name="distance_proportion"  value="0.00628"/>
    <param name="max_split_distance"   value="0.2"/>
    <param name="max_merge_separation" value="0.2"/>
    <param name="max_merge_spread"     value="0.2"/>
    <param name="max_circle_radius"    value="0.6"/>
    <param name="radius_enlargement"   value="0.3"/>

    <param name="frame_id"             value="laser"/>
  </node>

  <node name="obstacle_tracker" pkg="obstacle_detector" type="obstacle_tracker_node">
    <param name="active"                  value="true"/>

    <param name="loop_rate"               value="100.0"/>
    <param name="tracking_duration"       value="2.0"/>
    <param name="min_correspondence_cost" value="0.6"/>
    <param name="std_correspondence_dev"  value="0.15"/>
    <param name="process_variance"        value="0.1"/>  
    <param name="process_rate_variance"   value="0.1"/>  
    <param name="measurement_variance"    value="1.0"/> 

    <param name="frame_id"                value="map"/>

    <remap from="tracked_obstacles" to="obstacles"/>
  </node>

 <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find obstacle_detector)/resources/obstacle_detector.rviz"/>
 <!--<node name="test11" pkg="obstacle_detector" type="narrow_path.py" output="screen">
 </node>
-->
<node name="test22" pkg="obstacle_detector" type="test.py" output="screen">
 </node>
</launch>
